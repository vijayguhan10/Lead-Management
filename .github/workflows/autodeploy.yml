name: CI/CD ECS Deployment

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          - auth-service
          - call-service
          - lead-service
          - media-service
          - notification-service
          - telecaller-service
          - user-service

    steps:
      # 1Ô∏è‚É£ Checkout repository
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # 2Ô∏è‚É£ Resolve Dockerfile and service folder
      - name: Determine Dockerfile and service folder
        id: paths
        run: |
          case "${{ matrix.service }}" in
            telecaller-service)
              echo "DOCKERFILE=Microservices/dockerfiles/Telecaller-service.Dockerfile" >> $GITHUB_ENV
              echo "SERVICE_FOLDER=Microservices/Telecaller-service" >> $GITHUB_ENV
              ;;
            *)
              echo "DOCKERFILE=Microservices/dockerfiles/${{ matrix.service }}.Dockerfile" >> $GITHUB_ENV
              echo "SERVICE_FOLDER=Microservices/${{ matrix.service }}" >> $GITHUB_ENV
              ;;
          esac
          echo "Resolved DOCKERFILE=$DOCKERFILE"
          echo "Resolved SERVICE_FOLDER=$SERVICE_FOLDER"

      # 3Ô∏è‚É£ Check if service changed
      - name: Check if service changed
        id: changed
        shell: bash
        run: |
          set -euo pipefail
          SERVICE_FOLDER="$SERVICE_FOLDER"

          BEFORE="${{ github.event.before }}"
          AFTER="${{ github.sha }}"

          if [ "$BEFORE" = "0000000000000000000000000000000000000000" ] || ! git cat-file -e "$BEFORE" 2>/dev/null; then
            if git rev-parse "${AFTER}^" >/dev/null 2>&1; then
              CHANGED_FILES=$(git diff --name-only "${AFTER}^" "${AFTER}") || true
            else
              CHANGED_FILES=$(git show --name-only --pretty="" "${AFTER}") || true
            fi
          else
            CHANGED_FILES=$(git diff --name-only "$BEFORE" "$AFTER") || true
          fi

          echo "Changed files:"
          echo "$CHANGED_FILES"

          if echo "$CHANGED_FILES" | grep -q "${SERVICE_FOLDER}/"; then
            echo "SERVICE_CHANGED=true" >> $GITHUB_ENV
          else
            echo "SERVICE_CHANGED=false" >> $GITHUB_ENV
          fi

      # 4Ô∏è‚É£ Set up Docker Buildx
      - name: Set up Docker Buildx
        if: env.SERVICE_CHANGED == 'true'
        uses: docker/setup-buildx-action@v3

      # 5Ô∏è‚É£ Docker Hub login
      - name: Log in to Docker Hub
        if: env.SERVICE_CHANGED == 'true'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 6Ô∏è‚É£ Build and Push Docker Image (Buildx)
      - name: Build and Push Docker Image
        if: env.SERVICE_CHANGED == 'true'
        run: |
          IMAGE_TAG=v${{ github.run_number }}
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
          echo "Building and pushing $SERVICE_FOLDER using $DOCKERFILE"

          docker buildx build \
            --file "$DOCKERFILE" \
            --tag "vijay4230/${{ matrix.service }}:$IMAGE_TAG" \
            --tag "vijay4230/${{ matrix.service }}:latest" \
            --push \
            "$SERVICE_FOLDER"

      # 7Ô∏è‚É£ Configure AWS credentials
      - name: Configure AWS credentials
        if: env.SERVICE_CHANGED == 'true'
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      # 8Ô∏è‚É£ Register new ECS task definition
      - name: Register New ECS Task Definition
        if: env.SERVICE_CHANGED == 'true'
        run: |
          TASK_DEF_JSON=$(aws ecs describe-task-definition \
            --task-definition ${{ matrix.service }} \
            --region ap-south-1 \
            --query "taskDefinition" \
            --output json)

          NEW_TASK_DEF=$(echo "$TASK_DEF_JSON" | jq --arg IMAGE "vijay4230/${{ matrix.service }}:$IMAGE_TAG" '
            .containerDefinitions |= map(.image = $IMAGE)
            | del(.taskDefinitionArn, .revision, .status, .registeredAt, .registeredBy)
            | { family: .family, containerDefinitions: .containerDefinitions, volumes: .volumes }
            + ( if .taskRoleArn then { taskRoleArn: .taskRoleArn } else {} end )
            + { executionRoleArn: .executionRoleArn, networkMode: .networkMode, requiresCompatibilities: .requiresCompatibilities, cpu: .cpu, memory: .memory }
          ')

          echo "$NEW_TASK_DEF" > new-task.json

          REGISTER_OUTPUT=$(aws ecs register-task-definition \
            --cli-input-json file://new-task.json \
            --region ap-south-1)

          NEW_TASK_DEF_ARN=$(echo "$REGISTER_OUTPUT" | jq -r '.taskDefinition.taskDefinitionArn')
          echo "Registered new task definition: $NEW_TASK_DEF_ARN"
          echo "$REGISTER_OUTPUT" > register-output.json || true
          echo "NEW_TASK_DEF_ARN=$NEW_TASK_DEF_ARN" >> $GITHUB_ENV

      # 9Ô∏è‚É£ Update ECS Service
      - name: Update ECS Service
        if: env.SERVICE_CHANGED == 'true'
        run: |
          SERVICE_NAME=${{ matrix.service }}
          if [ -n "${NEW_TASK_DEF_ARN-}" ]; then
            echo "Updating service ${SERVICE_NAME} to use task definition $NEW_TASK_DEF_ARN"
            aws ecs update-service \
              --cluster Lead-Management \
              --service "$SERVICE_NAME" \
              --task-definition "$NEW_TASK_DEF_ARN" \
              --force-new-deployment \
              --region ap-south-1
          else
            echo "No new task definition ARN; forcing redeployment"
            aws ecs update-service \
              --cluster Lead-Management \
              --service "$SERVICE_NAME" \
              --force-new-deployment \
              --region ap-south-1
          fi

          echo "Waiting for service to stabilize..."
          aws ecs wait services-stable --cluster Lead-Management --services "$SERVICE_NAME" --region ap-south-1

      # üîü Send Deployment Email
      - name: Send Deployment Email
        if: env.SERVICE_CHANGED == 'true'
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          from: ${{ secrets.EMAIL_USERNAME }}
          secure: true
          subject: "ECS Deployment: ${{ matrix.service }} ‚Äî $IMAGE_TAG"
          to: vijayguhan10@gmail.com
          html_body: |
            <html>
            <body style="font-family:Arial,Helvetica,sans-serif; color:#222;">
              <div style="max-width:680px; margin:20px auto; border-radius:12px; overflow:hidden; box-shadow:0 6px 18px rgba(0,0,0,0.08);">
                <div style="background:#0f172a; color:#fff; padding:18px 24px;">
                  <h2 style="margin:0; font-size:20px;">Deployment Report</h2>
                  <p style="margin:6px 0 0; color:#d1d5db;">Repository: <strong>${{ github.repository }}</strong></p>
                </div>
                <div style="background:#fff; padding:18px 24px;">
                  <table style="width:100%; border-collapse:collapse;">
                    <tr>
                      <td style="padding:8px 0; width:160px; font-weight:600;">Service</td>
                      <td style="padding:8px 0;">${{ matrix.service }}</td>
                    </tr>
                    <tr>
                      <td style="padding:8px 0; font-weight:600;">Image</td>
                      <td style="padding:8px 0;">vijay4230/${{ matrix.service }}:$IMAGE_TAG</td>
                    </tr>
                    <tr>
                      <td style="padding:8px 0; font-weight:600;">Branch</td>
                      <td style="padding:8px 0;">${{ github.ref_name }}</td>
                    </tr>
                    <tr>
                      <td style="padding:8px 0; font-weight:600;">Commit</td>
                      <td style="padding:8px 0;"><a href="https://github.com/${{ github.repository }}/commit/${{ github.sha }}" style="color:#0366d6;text-decoration:none;">${{ github.sha }}</a></td>
                    </tr>
                    <tr>
                      <td style="padding:8px 0; font-weight:600;">ECS Cluster</td>
                      <td style="padding:8px 0;">Lead-Management (ap-south-1)</td>
                    </tr>
                  </table>
                  <p style="margin:18px 0 0; color:#6b7280;">This is an automated notification. If you did not expect this deployment, check the pipeline and repository changes.</p>
                </div>
              </div>
            </body>
            </html>
